// {
//   "extends": "@vue/tsconfig/tsconfig.json",
//   "compilerOptions": {
//     "ignoreDeprecations": "5.0",
//     "sourceMap": true,
//     "baseUrl": ".",
//     "paths": {
//       "@/*": ["./src/*"]
//     },
//     "lib": ["esnext", "dom"],

//     // "types": ["@dcloudio/types"]
//   },
//   "include": [
//     "src/**/*.ts",
//     "src/**/*.d.ts",
//     "src/**/*.tsx",
//     "src/**/*.vue",
//     "auto-imports.d.ts"
//   ]
// }
{
  "extends": "@vue/tsconfig/tsconfig.json",
  "compilerOptions": {
    /* 基本选项 */
    "target": "ES2020",
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "moduleResolution": "Node",
    "resolveJsonModule": true,
    "useDefineForClassFields": true,
    "allowJs": true,
    "checkJs": true,
    "declaration": true,
    "declarationDir": "./dist/types",

    /* 严格的类型检查选项 */
    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true, // 启用严格的 null 检查
    "noImplicitThis": true, // 当 this 表达式值为 any 类型的时候，生成一个错误
    // "alwaysStrict": true, // 以严格模式检查每个模块，并在每个文件里加入 'use strict'

    /* 额外的检查 */
    "noUnusedLocals": true, // 有未使用的变量时，抛出错误
    "noUnusedParameters": true, // 有未使用的参数时，抛出错误
    "noImplicitReturns": true, // 并不是所有函数里的代码都有返回值时，抛出错误
    "noFallthroughCasesInSwitch": true, // 报告switch语句的fallthrough错误。（即，不允许switch的case语句贯穿）

    /* 模块解析选项 */
    "baseUrl": "./", // 用于解析非相对模块名称的基础目录
    "paths": {
      "@/*": ["./src/*"]
    },
    "types": ["@dcloudio/types"]
  },
  /* 指定编译文件或排除指定编译文件 */
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "auto-imports.d.ts"
  ]
  // "references": [{ "path": "./tsconfig.node.json" }]
}
